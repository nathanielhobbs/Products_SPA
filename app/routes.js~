// app/routes.js
module.exports = function(app){

    // middleware to use for all requests
    app.use(function(req, res, next) {
        // do logging
       console.log(req.method + " " + req.url + " " + req.body);
       next(); // make sure we go to the next routes and don't stop here
    }); 

// test route to make sure everything is working (accessed via GET http:// localhost:8080/api)
app.get('/api', function(req, res) {
    res.json({ message: "The Product API and is up and running." });
});

// on routes that end in /products, used for dealing with entire list of products in db
// ---------------------------------------------------------------------------------
app.route('/api/products')

    // create a bear (accessed at POST http://localhost:8080/api/products)
    .post(function(req, res) {
        var product = new Product();        // create a new instance of the Product model
        product.name = req.body.name;       // set the product's name (comes from the request)

        // save the product and check for errors
        product.save(function(err) {
            if (err)
                res.send(err);

            res.json({ message: 'Product created!' });
        });
        
    })

    // get all the products (accessed at GET http://localhost:8080/api/products)
    .get(function(req, res) {
        Product.find(function(err, products) {
            if(err)
                res.send(err);

            res.json(products);
        });
    });

// on routes that end in /products/:product_id, used when dealing with just a single product in db
// --------------------------------------------------------------------------------
app.route('/api/products/:product_id')

        // get the product with :product_id (accessed via GET http://localhost:8080/api/products/:product_id)
        .get(function(req,res) {
            //use the product model to find the product we want
            Product.findById(req.params.product_id, function(err, product) {
                if(err)
                    res.send(err);
                res.json(product);
            });
        }) 

        // update the product with :product_id (accessed via PUT http://localhost:8080/api/products/:product_id)
        .post(function(req,res) {
            //use the product model to find the product we want
            Product.findById(req.params.product_id, function(err, product) {
                if(err)
                    res.send(err);

                product.name = req.body.name; // update the product info
                
                //save the product
                product.save(function(err) {
                    if(err)
                        res.send(err);

                    res.json({ message: 'Product updated!' });
                }); 
            });
        })

        // delete the product with :product_id (accessed at DELETE http://localhost/api/products/:product_id)
        .delete(function(req, res) {
            Product.remove({
                _id: req.params.product_id
            }, function(err,product) {
                if(err)
                    res.send(err);

                res.json({ message: 'Successfully deleted' });
                
            });
        });

// frontend Routes, any routes that aren't API requests will be passed along to angular to handle
//  -------------------------------------------------------------------------------- 
app.get('*', function(req, res) {
    res.sendfile('./public/index.html'); // load the single view file (angular will handle the page changes on the front-end)
});

